#!/usr/bin/env bash
set -euo pipefail

# StackKit 초기화 스크립트 - 기존 프로젝트에 StackKit 모듈 설치
# 사용법: curl -sSL https://raw.githubusercontent.com/your-org/stackkit/main/scripts/stackkit-init.sh | bash

SCRIPT_NAME="StackKit Initializer"
STACKKIT_REPO="https://github.com/your-org/stackkit.git"
TEMP_DIR="/tmp/stackkit-$$"
TARGET_DIR="${1:-$(pwd)}"

echo "🚀 $SCRIPT_NAME"
echo "================================="
echo "Target Directory: $TARGET_DIR"
echo ""

# Step 1: 대상 디렉토리 확인
if [[ ! -d "$TARGET_DIR" ]]; then
    echo "❌ Target directory does not exist: $TARGET_DIR"
    exit 1
fi

cd "$TARGET_DIR"

# 기존 프로젝트 확인
if [[ ! -f "pom.xml" && ! -f "build.gradle" && ! -f "package.json" && ! -f "requirements.txt" ]]; then
    echo "⚠️  No project files detected. Are you in the right directory?"
    echo "   Expected: pom.xml, build.gradle, package.json, or requirements.txt"
    read -p "   Continue anyway? (y/N): " -n 1 -r
    echo
    if [[ ! $REPLY =~ ^[Yy]$ ]]; then
        exit 1
    fi
fi

# Step 2: StackKit 다운로드
echo "📥 Downloading StackKit modules..."
git clone --depth 1 "$STACKKIT_REPO" "$TEMP_DIR" > /dev/null 2>&1

# Step 3: 필요한 파일들만 복사
echo "📋 Installing StackKit components..."

# Terraform 모듈 복사
if [[ ! -d "terraform" ]]; then
    mkdir -p terraform
fi

cp -r "$TEMP_DIR/terraform/modules" terraform/
cp -r "$TEMP_DIR/terraform/scripts" terraform/
cp "$TEMP_DIR/terraform/docs/IMPORT_GUIDE.md" terraform/

# AI Reviewer는 별도 설치 안내만 제공
echo "🤖 AI Reviewer는 별도로 구축하세요:"
echo "   1. StackKit 저장소를 클론하여 AI 리뷰어 구축"
echo "   2. 구축된 AI 리뷰어가 여러 프로젝트를 리뷰"
echo "   ℹ️  자세한 내용: https://github.com/your-org/stackkit#ai-reviewer"

# Atlantis 설정 복사
cp -r "$TEMP_DIR/atlantis" .

# 스크립트 복사
if [[ ! -d "scripts" ]]; then
    mkdir -p scripts
fi
cp "$TEMP_DIR/scripts/setup-atlantis-ai.sh" scripts/
cp "$TEMP_DIR/scripts/integrate-existing-project.sh" scripts/

# Step 4: 프로젝트별 설정 생성
echo "⚙️  Generating project configuration..."

PROJECT_NAME=$(basename "$TARGET_DIR")
cat > "terraform.tfvars" << EOF
# StackKit Configuration for $PROJECT_NAME
# Generated by stackkit-init.sh on $(date)

project_name = "$PROJECT_NAME"
environment  = "dev"
region      = "ap-northeast-2"

# Customize these values for your project
# vpc_cidr = "10.0.0.0/16"
# availability_zones = ["ap-northeast-2a", "ap-northeast-2c"]

# OpenAI API Key (for AI Reviewer)
# openai_api_key = "your-openai-api-key"

# GitHub Integration
# github_token = "your-github-token"
# github_webhook_secret = "your-webhook-secret"
EOF

# Step 5: README 생성
cat > "STACKKIT_README.md" << 'EOF'
# StackKit Integration

This project now includes StackKit modules for AWS infrastructure management.

## 🚀 Quick Start

### 1. Setup Atlantis AI Reviewer
```bash
./scripts/setup-atlantis-ai.sh
```

### 2. Deploy Infrastructure
```bash
cd terraform
terraform init
terraform plan
terraform apply
```

### 3. Configure GitHub Webhook
Follow the instructions in the setup script output.

## 📁 Directory Structure

```
your-project/
├── src/                    # Your application code
├── terraform/              # StackKit Terraform modules
│   ├── modules/           # Reusable infrastructure modules
│   └── scripts/           # Deployment scripts
├── ai-reviewer/           # AI code reviewer (optional)
├── atlantis/              # Atlantis configuration
└── scripts/               # Setup scripts
```

## 📚 Documentation

- [StackKit Modules](terraform/modules/README.md)
- [Import Guide](terraform/IMPORT_GUIDE.md)
- [AI Reviewer Setup](ai-reviewer/README.md)

## 🆘 Support

- GitHub Issues: https://github.com/your-org/stackkit/issues
- Documentation: https://github.com/your-org/stackkit
EOF

# Step 6: .gitignore 업데이트
if [[ -f ".gitignore" ]]; then
    echo "" >> .gitignore
    echo "# StackKit" >> .gitignore
    echo ".terraform/" >> .gitignore
    echo "*.tfstate" >> .gitignore
    echo "*.tfstate.backup" >> .gitignore
    echo ".terraform.lock.hcl" >> .gitignore
else
    cat > .gitignore << 'EOF'
# StackKit
.terraform/
*.tfstate
*.tfstate.backup
.terraform.lock.hcl

# Secrets
terraform.tfvars.backup
*.pem
*.key
EOF
fi

# Step 7: 정리
rm -rf "$TEMP_DIR"

echo ""
echo "🎉 StackKit installation complete!"
echo "=================================="
echo ""
echo "📋 What was installed:"
echo "   ✅ Terraform modules (terraform/modules/)"
echo "   ✅ Deployment scripts (scripts/)"
echo "   ✅ Atlantis configuration (atlantis/)"
echo "   ✅ Project configuration (terraform.tfvars)"
echo "   ✅ Documentation (STACKKIT_README.md)"
echo ""
echo "📋 Next steps:"
echo "1. 🔧 Edit terraform.tfvars with your settings"
echo "2. 🚀 Run: ./scripts/setup-atlantis-ai.sh"
echo "3. 📖 Read: STACKKIT_README.md"
echo ""
echo "💡 Your project structure:"
echo "   - Keep your application code in src/ (or existing structure)"
echo "   - Use terraform/ for infrastructure"
echo "   - StackKit modules are now part of YOUR project"
echo ""
echo "🆘 Need help? Check STACKKIT_README.md or visit:"
echo "   https://github.com/your-org/stackkit"
